-- 战斗播放器

battlePlayer = class("battlePlayer")

function battlePlayer:ctor()

	self._battleRecords = nil;

	self._currentRecord = nil;

	self:registerRecordType();
	
end

function battlePlayer:destroy( ... )
	
	self._battleRecords = nil;
	self._currentRecord = nil;

end

function battlePlayer:registerRecordType()
	
	self._recordType = {};

	self._recordType[enum.BATTLE_RECORD_TYPE.SWAP] = battleRecordGemSwap;
	self._recordType[enum.BATTLE_RECORD_TYPE.ERASE] = battleRecordGemErase;
	self._recordType[enum.BATTLE_RECORD_TYPE.DROP] = battleRecordGemDrop;
	self._recordType[enum.BATTLE_RECORD_TYPE.ERASE_DROP_END] = battleRecordGemEraseDropEnd;
	self._recordType[enum.BATTLE_RECORD_TYPE.HERO_ATTRIBUTE] = battleRecordHeroAttribute;
	self._recordType[enum.BATTLE_RECORD_TYPE.CHANGE_GEM] = battleRecordGemChange;
	self._recordType[enum.BATTLE_RECORD_TYPE.END_ROUND] = battleRecordEndRound;
	self._recordType[enum.BATTLE_RECORD_TYPE.FILL_SKILL_CARD] = battleRecordFillSkillCard;

end

function battlePlayer:tick()

	if self._currentRecord then

		if self._currentRecord:isEnd() then
			
			self._currentRecord = nil;

		else

			self._currentRecord:tick();

			return;

		end

	end

	if self._currentRecord == nil then
	
		-- check if has a new record
		if self._battleRecords and table.nums(self._battleRecords) > 0 then
		
			self._currentRecord = table.remove(self._battleRecords, 1);

			self._currentRecord:start();

		end

	end
end

function battlePlayer:addBattleRecord(record)

	self._battleRecords = self._battleRecords or {};

	table.insert(self._battleRecords, record);

end

function battlePlayer:onHandelRecord(recordData)
	
	local record = self._recordType[recordData.recordType].new(recordData);

	if record then
		
		self:addBattleRecord(record);

	end

end