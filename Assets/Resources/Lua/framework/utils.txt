utils = {};

function utils.addChildAndReset(parent, child)

	child.transform:SetParent(parent.transform);

	child.transform.localPosition = UnityEngine.Vector3.zero;
	child.transform.localRotation = UnityEngine.Quaternion.identity;
	child.transform.localScale = UnityEngine.Vector3.one;

end

function utils.addChild(parent, child)

	child.transform:SetParent(parent.transform);

end

-- ui 
function  utils.setAnchoredPosition(gameobject, x, y )
	
	local rectCom = gameobject:GetComponent(UnityEngine.RectTransform);

	if rectCom then
		
		rectCom.anchoredPosition = UnityEngine.Vector2(x, y);

	end

end

function  utils.setUIOffsetMin(gameobject, x, y )
	
	local rectCom = gameobject:GetComponent(UnityEngine.RectTransform);

	if rectCom then
		
		rectCom.offsetMin = UnityEngine.Vector2(x, y);

	end

end

function  utils.setUIOffsetMax(gameobject, x, y )
	
	local rectCom = gameobject:GetComponent(UnityEngine.RectTransform);

	if rectCom then
		
		rectCom.offsetMax = UnityEngine.Vector2(x, y);

	end

end

-- 用名字做索引，获得child的map
function  utils.getChildrenMap( gameobject, mapTable )
	
	if not gameobject then
		return nil;
	end

	local childCount = gameobject.transform.childCount;

	for i=0, childCount-1 do
		local childTransform = gameobject.transform:GetChild(i);

		if mapTable[childTransform.name] then
			print("getChildrenMap error, a object has the name is already exist! name: "..childTransform.name);
			return nil;
		end

		mapTable[childTransform.name] = childTransform.gameObject;

		utils.getChildrenMap(childTransform.gameObject, mapTable);
		
	end
end

